match(init:version20200928T082803)
match(updated:version20200928T082848)
return apoc.hashing.fingerprinting(init) as hashInit, apoc.hashing.fingerprinting(updated) as hashUpdated


## -- node + corresponding hash
match(updated:version20200928T082848)
return updated, apoc.hashing.fingerprint(updated)

## -- match project nodes
match(init:IfcProject:version20200928T082803)
match(updated:IfcProject:version20200928T082848)
return init,apoc.hashing.fingerprint(init,["globalId", "name"]), updated, apoc.hashing.fingerprint(updated,["globalId", "name"])

## -- create virtual node from existing -> kills the existing node ...
match(n:IfcProject:version20200928T082803)
return apoc.create.virtual.fromNode(n, keys(n))

// get existing node
match(n:IfcProject:version20200928T082803)
// create virtual node
with apoc.create.virtual.fromNode(n, keys(n) ) as vn
// remove labels
CALL apoc.create.setLabels(vn, ["null"]) YIELD node as v
// return unlabeled vNode
return v


// get existing node
match(n:IfcSite) with 
with apoc.create.vNode([] ) as vn

return vn